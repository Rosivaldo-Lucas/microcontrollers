;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSON                        *
;*                   SETEMBRO DE 2023                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       NOME DO PROJETO                           *
;*                           CLIENTE                               *
;*         DESENVOLVIDO PELA MOSAICO ENGENHARIA E CONSULTORIA      *
;*   VERSÃO: 1.0                           DATA: 17/06/03          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     DESCRIÇÃO DO ARQUIVO                        *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;*                                                                 *
;*                                                                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_ON & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x20		;ENDEREÇO INICIAL DA MEMÓRIA DE USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES
		DADO		;ARMAZENA O DADO PARA A EEPROM

		;NOVAS VARIÁVEIS
		CONT_WTD
		CONT_FALHA

	ENDC			;FIM DO BLOCO DE MEMÓRIA
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA
; INICIALIZAÇÃO DA EEPROM, DE ACORDO COM A DESCRIÇÃO NO ARQUIVO "Def_Rega_Formigas.inc"

;A PARTIR DO ENDEREÇO ZERO DA EEPROM, DADOS EM ORDEM ALEATÓRIA
	ORG 0x2100
	DE	0X89,0X1E,0X39,0X9F,0XC2,0X0C,0XAB,0X33,0X63,0XD3,0X95,0X7B,0X38,0XD6,0X1E,0X48
	DE	0XDB,0XD8,0X86,0XFD,0XA5,0XFC,0X0C,0XBE,0X68,0X9B,0XD9,0X10,0XD8,0XEC,0X90,0X91
	DE	0XAA,0XBB,0XCC,0XDD,0XEE,0XF1,0XC9,0X77

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       VETOR DE RESET                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    INÍCIO DA INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP			;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP		;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    ROTINA DE INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÃO ESCRITAS AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.
LE_EEPROM
;LER DADO DA EEPROM, CUJO ENDEREÇO É INDICADO EM W
;O DADO LIDO RETORNA EM W
	ANDLW	.127			;LIMITA ENDEREÇO MAX. 127
	BANK1				;ACESSO VIA BANK 1
	MOVWF	EEADR			;INDICA O END. DE LEITURA
	BSF	EECON1,RD		;INICIA O PROCESSO DE LEITURA
	MOVF	EEDATA,W		;COLOCA DADO LIDO EM W
	BANK0				;POSICIONA PARA BANK 0
	RETURN

GRAVA_EEPROM
;ESCREVE UM DADO NA EEPROM, CUJO ENDEREÇO É INDICADO EM W
;O DADO A SER ESCRITO DEVE ESTAR ARMAZENADO NA VARIÁVEL DADO
	ANDLW	.127			;LIMITA ENDEREÇO MAX. 127
	BANK1				;ACESSO VIA BANK 1
	MOVWF	EEADR
	MOVF	DADO,W
	MOVWF	EEDATA
	BSF	EECON1,WREN		;HABILITA ESCRITA
	BCF	INTCON,GIE		;DESLIGA INTERRUPÇÕES
	MOVLW	B'01010101'		;DESBLOQUEIA ESCRITA
	MOVWF	EECON2			;
	MOVLW	B'10101010'		;DESBLOQUEIA ESCRITA
	MOVWF	EECON2			;
	BSF	EECON1,WR		;INICIA A ESCRITA
AGUARDA
	BTFSC	EECON1,WR		;TERMINOU?
	GOTO	AGUARDA
	BSF	INTCON,GIE		;HABILITA INTERRUPÇÕES
	BANK0				;POSICIONA PARA BANK 0
	RETURN

SUBROTINA1

	;CORPO DA ROTINA

	RETURN

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00001010'		;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS)
	MOVWF	TRISIO			;COMO SAÍDAS
	
	MOVLW	B'00000010'
	MOVFW	ANSEL			;DEFINE PORTAS COMO Digital I/O
	
	MOVLW	B'00000100'
	MOVWF	OPTION_REG		;DEFINE OPÇÕES DE OPERAÇÃO
	
	MOVLW	B'00000000'
	MOVWF	INTCON			;DEFINE OPÇÕES DE INTERRUPÇÕES
	
	MOVLW	B'10001011'		;COLOCA 1011 PARA A COMPARAÇÃO - 2.96V COM N = 11
	MOVWF	VRCON
	
	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00010011'
	MOVWF	CMCON			;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
MAIN

	;CORPO DA ROTINA PRINCIPAL
	BTFSC	    GPIO,GP4		;VERIFICA SE O GP4 É ZERO, SE FOR, PULA PARA A PRÓXIMA INSTRUÇÃO, SE NÃO, VAI PARA O MODO ECONOMIA
	GOTO	    ECONOMIA		;VAI PARA O MODO ECONOMIA
	
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	    B'10001011'		;COLOCA 1011 PARA A COMPARAÇÃO - 2.96V COM N = 11
	MOVWF	    VRCON
	
	BANK0				;RETORNA PARA O BANCO
	MOVLW	    B'00010011'
	MOVWF	    CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO
	
	INCF	    CONT_WTD		;INCREMENTA O CONTADOR WTD
	MOVLW	    .30			;MOVE 30 PARA O WTD. SIGNIFICA QUE PARA BATER 0.5s TERÁ 30 REPETIÇÕES DO WTD - 17ms * 30 = 0.51s
	SUBWF	    CONT_WTD,W		;W = F - W. O BIT GP1 RECEBE A TENSÃO QUE IRÁ SER VERIFICADA, SE ESTIVER ABAIXO DE 9V DISPARA ALARME, SE NÃO, CONTINUA
	BTFSS	    STATUS,C		;VERIFICA A SUBTRACAO, SE O BIT C FOR ZERO, PULA PARA A PRÓXIMA LINHA, SE NÃO EXECUTA A PRÓXIMA LINHA
	GOTO	    OPERACAO		;VAI PARA O MODO DE OPERAÇÃO, AINDA NÃO PASSOU 0.5s DE ATIVIDADE
	
	;JÁ PASSOU OS 0.5s ENTÃO COLOCA EM MODO ESPERA
	CLRF	    CONT_WTD		;ZERA O CONTADOR DO WTD
	BCF	    GPIO,GP5		;DESLIGA O BIT GP5, INDICA QUE NÃO ESTÁ MAIS EM FUNCIONAMENTO
	
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	    B'00011010'		;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS)
	MOVWF	    TRISIO		;COLOCA O GP4 COMO ENTRADA
	
	BANK0
	BSF	    GPIO,GP4		;AQUI ERA PARA SETAR O BIT GP4 PARA 1, E IR PARA ECONOMIA
					;E QUANDO RETORNAR PARA A MAIN IA VERIFICAR QUE ESTÁ EM 1 E NÃO PODE OPERAR E VAI PARA DESCANSO ATÉ O BIT GP4 FOR ZERO
					;MAS NÃO ESTÁ SETANDO O BIT GP4 PARA 1
	
	GOTO	    ECONOMIA		;VAI PARA O MODO DE ECONOMIA
	
OPERACAO
	BSF	    GPIO,GP5		;SETA O BIT GP5 PARA NÍVEL ALTO, INDICA QUE ESTÁ EM OPERAÇÃO
	BTFSS	    CMCON,COUT		;VERIFICA SE O BIT COUT DO CMCON É UM, SE FOR, PULA A PRÓXIMA LINHA, SE NÃO, EXECUTA A PRÓXIMA LINHA
	GOTO	    ALARME		;SE A TENSÃO FOR MENOR QUE A ESPERADA, CHAMA O ALARME
	BCF	    GPIO,GP0		;SETA O BIT GP0 PARA NÍVEL LÓGICO BAIXO - BIT DE ALARME
	SLEEP				;TUDO ESTÁ BEM, AGUARDA E RETORNAR PARA A MAIN
	GOTO	    MAIN		;RETORNA PARA A MAIN
	
ALARME
	BSF	    GPIO,GP0		;SETA O BIT GP0 PARA NÍVEL ALTO, INDICA FALHA - BIT DE ALARME
	
	INCF	    CONT_FALHA		;INCREMENTA O CONTADOR DE FALHAS
	MOVFW	    CONT_FALHA		;MOVE O NÚMERO DE FALHAS PARA WORK
	MOVWF	    DADO		;MOVE O NÚMERO DE FALHAS PARA DADO, SERÁ ARMAZENADO NA EEPROM
	MOVLW	    0x1F		;ENDEREÇO DA EEPROM QUE SERÁ ARMAZENADO A QUANTIDADE DE FALHAS
	CALL	    GRAVA_EEPROM	;CHAMA FUNÇÃO QUE GRAVA NA EEPROM
	SLEEP				;AGUARDA E RETORNA PARA A MAIN
	GOTO	    MAIN		;RETORNA PARA A MAIN
	
ECONOMIA
	BANK1				;ALTERA PARA O BANCO1
	MOVLW	B'00000000'		;SETA TODOS OS BITS DO VRCON PARA ZERO
	MOVWF	VRCON			;DESLIGA VRCON
	
	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00000000'
	MOVWF	CMCON			;DESLIGA O COMPARADOR
	
	MOVLW	B'00000000'
	MOVWF	ADCON0			;DESLIGA O CONVERSOR A/D
	
	SLEEP				;AGUARDA ATÉ ACORDAR E RETORNAR PARA VERIFICAR SE PODE OPERAR OU NÃO
	
	GOTO	    MAIN		;RETORNA PARA A MAIN

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END
